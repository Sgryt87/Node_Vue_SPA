GENERAL=>
404/403/500 pages
notifications(success, fail, errors, etc..)

new version node =>
rm -rf node_modules/bcrypt
$ npm install

ADMIN=>

TODO: Add validators to routes
TODO: Display foreign keys for pictures
TODO: Validate tokens in all admins routes
TODO: Pass IDs to routes properly, then pass to controllers using synced params
TODO: refactor routes handling  - factory wrapping for routes

=VUE=
create list of data on load, connect via v-model to the each componnent
TODO: Organize VUE components ( Admin panel is the main one, it includes header/footer + left side navigation
header: LOGIN/LOGOUT, navigation includes drop downs for ALL/Pictures/Genres/User info
Pictures - table with photos (edit inline)
Genres - table with photos ( edit inline)
User - display profile, update name/pass.
Passing ID's to params, synced with VUEX
TODO: Set up VUEX to control the state
TODO: Build different slot for the each genre, navigate on click(using a router elements)
on keydown esc close the window


CLIENT=>

some pic for the main chunk
- about section
- photo will mirror Admins REST for photos displaying (by genres)
- email section
some data in footer (contact info, insta, etc...)

:id -> handle if passed improper id (404)



REGISTRATION + LOGIN forms
+ reset password



https://stackoverflow.com/questions/44989162/file-upload-in-vuetify -- file upload

joi.string().allow('')



 - create a separate service for the upload (without validation logic)
- handle upload ONLY for photo-related HTTP's with my passport token validation
 - create additional interceptor-validator for all uploads with Joi ( file type, size, etc..)
- if Joi => next() then store the file in uploads folder accordingly, otherwise return an error from async/await POST method.


app.use(helmet.hsts({
  maxAge: 15780000,
  preload: true
}));

DDoS prot
--- cloudflare
--- akamia

Broot
require('rate-limiter-flexible');

rc or config for configurations??


//////////2.0
dirname for logs && logs for prod/dev
add validation to controllers
double check JWT verification
